From bb9c869b0c4a3adbc3135fdaebc8e7feded098fe Mon Sep 17 00:00:00 2001
From: Sanjana Talreja <sanjanatalreja28@gmail.com>
Date: Sat, 6 Jun 2020 18:07:23 +0530
Subject: [PATCH] Create Patch File

---
 datafeed/test.csv |  0
 debug.log         | 12 ++++++++++++
 src/App.tsx       | 24 ++++++++++++++++++------
 src/Graph.tsx     | 10 ++++++++--
 4 files changed, 38 insertions(+), 8 deletions(-)
 create mode 100644 datafeed/test.csv
 create mode 100644 debug.log

diff --git a/datafeed/test.csv b/datafeed/test.csv
new file mode 100644
index 0000000..e69de29
diff --git a/debug.log b/debug.log
new file mode 100644
index 0000000..ba52f42
--- /dev/null
+++ b/debug.log
@@ -0,0 +1,12 @@
+[0605/013203.189:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/013203.190:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/013203.190:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/015337.520:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/015337.522:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/015337.523:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/024150.337:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/024150.338:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/024150.338:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/201656.746:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/201656.754:ERROR:crash_report_database_win.cc(469)] failed to stat report
+[0605/201656.755:ERROR:crash_report_database_win.cc(469)] failed to stat report
diff --git a/src/App.tsx b/src/App.tsx
index 0728518..08e4b93 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph: false,
     };
   }
 
@@ -29,6 +31,7 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
+    if(this.state.showGraph)
     return (<Graph data={this.state.data}/>)
   }
 
@@ -36,13 +39,22 @@ class App extends Component<{}, IState> {
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
+    let x = 0;
+    const interval = setInterval(() => {
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+        // Update the state by creating a new array of data that consists of
+        // Previous data in the state and the new data from server
+        this.setState( {
+            data: serverResponds,
+            showGraph: true,
+        });
     });
-  }
-
+    x++;
+    if (x > 1000) {
+      clearInterval(interval);
+    }
+  }, 100);
+}
   /**
    * Render the App react component
    */
diff --git a/src/Graph.tsx b/src/Graph.tsx
index ec1430e..218d35b 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,7 +32,7 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
       stock: 'string',
@@ -49,6 +49,12 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.load(this.table);
+      elem.setAttribute('view', 'y_line'); 
+      elem.setAttribute('column-pivots', '["stock"]'); 
+      elem.setAttribute('row-pivots', '["timestamp"]'); 
+      elem.setAttribute('columns', '["top_ask_price"]'); 
+      elem.setAttribute('aggregates', '{"stock":"distinct count","top_ask_price":"avg","top_bid_price":"avg","timestamp":"distinct count"}');
     }
   }
 
-- 
2.25.0.windows.1

